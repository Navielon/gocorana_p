//!========================================================================================================================================================
// Обращение к шапке сайта
.header {
    position: absolute; // Абсолютное позиционирование, вырываем из контекста
    width: 100%; // Ширина 100%
    top: 0; // Позиционируем сверху
    left: 0; // Позиционируем слева
    z-index: 50; // Делаем шапку всегда видимой (для будущей фиксации)
    // .header__container - Обращение к ограничивающему контейнеру
    &__container {
        display: flex; // Выстраиваем элементы согласно флекс модели (в строку)
        min-height: rem(144); // Минимальная высота шапки
        align-items: center; // Выравнивание элементов по центру (Вертикаль)
        @media (max-width: rem(1087)) // Брекпоинт при разрешении экрана меньше 1087px
            {
            max-width: rem(970); // Максимальная ширина контейнера при разрешении экрана меньше 1087px
            min-height: rem(124); // Минимальная высота контейнера (шапки) при разрешении экрана меньше 1087px
            }
        @media  (max-width: rem(991.98)) // Брекпоинт при разрешении экрана меньше 992px
        {
        max-width: rem(750); // Максимальная ширина контейнера при разрешении экрана меньше 992px
        min-height: rem(114); // Минимальная высота контейнера (шапки) при разрешении экрана меньше 992px
        }
        @media  (max-width: rem(767.98)) // Брекпоинт при разрешении экрана меньше 768px
        {
        max-width: none; // Обнуляет максимальную ширину контейнера при разрешении экрана меньше 768px
        }
    }
    // .header__logo - Обращение к логотипу в шапке
    &__logo {
        position: relative; // Делаем родителем (чтобы задать z индекс)
        z-index: 5; // Элемент будет выше остальных объектов, тем самым перекрывая их
        @media (max-width: rem(359.98)) // Брекпоинт при разрешении экрана меньше 360px
        {
            flex: 0 0 rem(40); // Задаём ширину логотипу
            overflow: hidden; // Обрезаем то, что выходит за пределы ограничения ширины
        }
    }
    // .header__button - Контейнер кнопки
    &__button {
        flex: 0 0 rem(252); // Задаём ширину контейнеру кнопки
        display: flex; // Выравниваем элементы внутри контейнера согласно флекс-модели
        justify-content: flex-end; // Прибиваем элемент к краю контейнера (правому)
        align-items: center; // Выравниваем по вертикали, делая элементы (кнопку) по центру
    @media  (max-width: rem(991.98)) // Брекпоинт при разрешении экрана меньше 992px
        {
            flex: 0 0 rem(152); // Ширина контейнера станет меньше
        }
    }
//!========================================================================================================================================================
//?========================================================================================================================================================
//!==================== Работа меню бургер ================================================================================================================
    @media (max-width: rem(767.98)) // Брекпоинт при разрешении экрана меньше 768px
    {
        &:target .menu__body // Обращение к классу срабатывания. При нажатии на icon menu, которое появляется при разрешении экрана меньше 768px у шапки появляется класс target. 
        {
            left: 0; // Возвращаем элемент на экран (ранее задано -100%, тем самым полностью скрывая его)
        }
        &:target .icon-menu // Обращение к классу срабатывания (нажатия). При нажатии скрывает кнопку "icon-menu".
        {
            display: none; // Временно удаляет элемент. 
        }
        &:target .close-icon-menu // Обращение к классу срабатывания (нажатия). При нажатии на icon menu первое скрывается (бургер), а вместо него появляется данный элемент.
        {
            display: block; // Делаем элемент блочным и видимым.
            z-index: 5; // Элемент накладывается поверх тех элементов, у которых z-индекс меньше чем у самого элемента.
        }
    }
}
//!========================================================================================================================================================
//?========================================================================================================================================================
//!==================== Меню навигации ====================================================================================================================
// Обращение к контейнеру меню используя методологию бэм
.menu {
    display: flex; // Элемент выстраиваются согласно флекс модели и становятся блочными (флекс - элементами)
    flex: 1 1 auto; // Равномерно распределяем элементы внутри контейнера
    justify-content: flex-end; // Прижимаем элементы к правой стороне контейнера
    padding: rem(0) rem(40) rem(0) rem(0); // Внутренний отступ справа
    @media  (max-width: rem(991.98)) // Брекпоинт при разрешении экрана меньше 992px
    {
        padding: rem(0) rem(30) rem(0) rem(0); // Уменьшаем внутренний отступ справа
    }
    // .menu__body - меню навигации (контейнер)
    &__body{
    @media (max-width: rem(767.98)) // Брекпоинт при разрешении экрана меньше 768px
        {
            position: fixed; // Фиксируем меню навигации
            top: 0; // Позиционируем сверху
            left: -100%; // Скрываем в лево на 100% (полностью)
            width: 100%; // Ширина 100% - высчитывается на основе родителя (контейнера)
            height: 100%; // Высота 100% - высчитывается на основе родителя (контейнера)
            overflow: auto; // Свойство управляет отображением содержимого элемента. Auto - означает, что полосы прокрутки появятся лишь при необходимости.
            background-color: $bb; // Цвет фона бургер меню
            padding: rem(150) rem(15) rem(30) rem(15); // Внутренний отступ сверху, справа, снизу, слева
            transition: .3s; // Плавность анимации (выдвижение бургер меню)
        }
    }
    // .menu__list - список, содержимое меню навигации. 
    &__list {
        display: flex; // Элементы внутри меню навигации выстраиваются согласно флекс модели
        gap: rem(40); // Устанавливает отступы между строками и столбцами. 
        @media (max-width: rem(767.98)) // Брекпоинт при разрешении экрана меньше 768px
        {
            flex-direction: column; // Меню выстраивается в колонку
            justify-content: center; // Меню выравнивается по центру (горизонталь)
            align-items: center; // Меню выравнивается по центру (вертикаль)
            gap: rem(10); // Отступ между элементами уменьшается до 1rem
        }
    }
    // .menu__item - обращение к каждому элементу внутри списка (li)
    &__item {
        @media (max-width: rem(767.98))// Брекпоинт при разрешении экрана меньше 768px
        {
        margin: 0 0 rem(15) 0; // Внешний отступ снизу (между элементами меню навигации)
        &:last-child // Обращение к последнему элементу в списке
        {
            margin-bottom: 0; // Обнуление внешнего отступа для последнего элемента
        }
        }
    }
    // .menu__link - Обращение к ссылкам меню навигации
    &__link {
        text-transform: uppercase; // Переводит текст из нижнего регистра в верхний.
        font-family: $FH; // Установка семейства шрифта для меню навигации.
        font-weight: 700; // Ширина шрифта (жирность)
        line-height: math.div(12, 10); // Межстрочный интервал
        color: $mainColor; // Цвет текста
        letter-spacing: 0.14em; // Межсимвольный интервал
        display: inline-block; // Элемент становится блочным сохраняя свойства строчного элемента
        transform: scale(1); // Стандартный размер элемента
        transition: .2s; // Плавность анимации
        border-bottom: 2px solid $bg; // Нижнее подчёркивание в цвет фона
        &:hover // Псведо-элемент. Определяет стиль элемента при наведении на него курсора мыши.
        {
            transform: scale(1.1); // Изменение маштаба по горизонтальной вертикали (Проще говоря увеличивает его, визуально, не изменяя реальные размер элемента)
            border-bottom: 2px solid $mainColor; // Изменение цвета нижнего подчёркивания
        }
        @media (max-width: rem(767.98)) // Брекпоинт при разрешении экрана меньше 768px
        {
            font-size: rem(30); // Увеличение размера шрифта
            color: $sw; // Цвет текста
        }
        @media (max-width: rem(567.98)) // Брекпоинт при разрешении экрана меньше 568px
        {
            font-size: rem(25); // Размер шрифта
        }
    }
}
//!========================================================================================================================================================
//?========================================================================================================================================================
//!========================== Меню бургер =================================================================================================================
// Обращение к меню бургер
.icon-menu{
    display: none; // Изначально удаляет элемент из содержимого веб-страницы.
    @media (max-width: rem(767.98)) // Брекпоинт при разрешении экрана меньше 768px
        {
            display: flex; // Элемент становится видимым и выстраивает своё содержимое согласно флекс модели
            position: relative; // Элемент становится родителем
            flex: 0 0 rem(30); // Ширина бургер меню
            height: rem(18); // Высота бургер меню
            flex-direction: column; // Выстраивает элементы списком по вертикали
            justify-content: space-between; // Равномерно распределяет элементы по контейнеру (по вертикали)
            margin: 0 0 0 rem(20); // Внешний отступ слева
            // Обращение к псевдо-элементам "Перед" и "После". Делаем полосочки для бургер меню
            &::before,
            &::after {
                content: ""; // Обязательное свойство, отвечающее за отображение контента
                transition: all 0.3s; // Плавность анимации
                height: rem(2); // Высота
                background-color: $mainColor; // Цвет фона (полосочки)
            }
            span // Делаем вторую полосочку для бургер меню
            {
                height: rem(2); // Высота (размер полосочки)
                background-color: $mainColor; // Цвет фона (полосочки)
            }
        }
}
// Обращение к инокне закрытия бургер-меню
.close-icon-menu{
    display: none; // Изначально удаляет элемент из содержимого веб-страницы.
    @media (max-width: rem(767.98)) // Брекпоинт при разрешении экрана меньше 768px
        {
            flex: 0 0 rem(30); // Ширина элемента
            height: 30px; // Высота
            position: relative; // Элемент становится родителем
            margin: 0 0 0 rem(20); // Внешний отступ слева
              // Обращение к псевдо-элементам "Перед" и "После". Делаем крестик для бургер меню
            &::before,
            &::after {
                content: ""; // Обязательное свойство, отвечающее за отображение контента
                position: absolute; // Позиционирует относительно родителя
                top: 50%; // Позиционирует по вертикали
                left: 0; // Позиционирует по горизонтали
                width: 100%; // Ширина высчитывается на основе родителя
                background-color: $mainColor; // Цвет фона
                height: rem(2); // Высота (толщина линии)
            }
            // Обращение к псевдо-элементу "Перед"
            &::before{
                transform: rotate(-45deg); // Поворот линии
            }
            // Обращение к псевдо-элементу "После"
            &::after{
                transform: rotate(45deg); // Поворот линии
            }
        }
}
//!========================================================================================================================================================
//?========================================================================================================================================================
//!========== Кнопки на всей страницы (методология БЭМ) ===================================================================================================
// Обращение к кнопке
.button {
    display: inline-block; // Элемент становится блочным сохраняя свойства строчного элемента
    text-transform: uppercase; // Переводит текст в верхний регистр
    font-family: $FH; // Устанавливает семейство шрифта
    font-size: rem(10); // Размер шрифта
    font-weight: 800; // Ширина текста (жирность)
    line-height: math.div(12, 10); // Межстрочный интервал
    letter-spacing: 0.14em; // Межсимвольный интервал
    color: $sw; // Цвет текста
    padding: rem(14) rem(30); // Внутренний отступ
    border-radius: rem(5); // Скругляет углы
    background-color: $red; // Цвет фона у кнопки (ссылки)
    transition: .2s; // Плавность анимации
    transform: scale(1); // Изначальный размер
    &:hover // Псведо-элемент. Определяет стиль элемента при наведении на него курсора мыши.
    {
        background-color: $redh; // Цвет фона при наведении
        transform: scale(1.1); // Увеличивает элемент (не затрагивает ближайшие)
    }
    &:active // Псведо-элемент. Определяет стиль элемента при нажатии на него.
    {
        background-color: $reda; // Цвет фона при нажатии
    }
    // .button__blue
    &__blue{
        position: relative; // Элемент становится родителем (для z индекса)
        z-index: 5; // Элемент накладывается поверх тех элементов, у которых z-индекс меньше чем у самого элемента.
        background-color: $blue; // Цвет фона кнопки (ссылки)
        &:hover // Псведо-элемент. Определяет стиль элемента при наведении на него курсора мыши.
        {
            background-color: $blueh; // Цвет фона при наведении
        }
        &:active // Псведо-элемент. Определяет стиль элемента при нажатии на него.
        {
            background-color: $bluea; // Цвет фона при нажатии
        }
    }
}
//!========================================================================================================================================================
